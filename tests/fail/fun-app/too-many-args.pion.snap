exit status: 0
stdout:
let id : Bool -> Bool = fun (x : Bool) => x; let _ : #error = #error;
let _ : #error = #error;
let always : Bool -> Int -> Int = fun (x : Bool) (y : Int) => y;
let _ : #error = #error; let _ : #error = #error; Type : Type

stderr:
error: tried to apply too many arguments to function
  ┌─ tests/fail/fun-app/too-many-args.pion:4:9
  │
4 │ let _ = id false true;
  │         ^^       ---- extra argument
  │         │         
  │         expression of type `Bool -> Bool`
  │
  = help: function expects 1 argument, but recieved 2 arguments

error: tried to apply too many arguments to function
  ┌─ tests/fail/fun-app/too-many-args.pion:5:9
  │
5 │ let _ = id false true true;
  │         ^^       --------- extra arguments
  │         │         
  │         expression of type `Bool -> Bool`
  │
  = help: function expects 1 argument, but recieved 3 arguments

error: tried to apply too many arguments to function
  ┌─ tests/fail/fun-app/too-many-args.pion:8:9
  │
8 │ let _ = always false 0 true;
  │         ^^^^^^         ---- extra argument
  │         │               
  │         expression of type `Bool -> Int -> Int`
  │
  = help: function expects 2 arguments, but recieved 3 arguments

error: tried to apply too many arguments to function
  ┌─ tests/fail/fun-app/too-many-args.pion:9:9
  │
9 │ let _ = always false 0 true true;
  │         ^^^^^^         --------- extra arguments
  │         │               
  │         expression of type `Bool -> Int -> Int`
  │
  = help: function expects 2 arguments, but recieved 4 arguments

