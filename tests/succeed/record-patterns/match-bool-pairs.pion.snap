exit status: 0
stdout:
let and1 : Bool -> Bool -> Bool =
    fun (x : Bool) (y : Bool) => let a : (Bool, Bool) = (x, y);
    match a._0 {
        true => match a._1 {
            true => true,
            _ => false,
        },
        _ => false,
    };
let and2 : Bool -> Bool -> Bool =
    fun (x : Bool) (y : Bool) => let a : (Bool, Bool) = (x, y);
    match a._0 {
        true => match a._1 {
            true => true,
            _ => false,
        },
        _ => false,
    };
let and3 : Bool -> Bool -> Bool =
    fun (x : Bool) (y : Bool) => let a : (Bool, Bool) = (x, y);
    match a._0 {
        false => match a._1 {
            false => false,
            true => false,
        },
        true => match a._1 {
            false => false,
            true => true,
        },
    };
let or1 : Bool -> Bool -> Bool =
    fun (x : Bool) (y : Bool) => let a : (Bool, Bool) = (x, y);
    match a._0 {
        false => match a._1 {
            false => false,
            _ => true,
        },
        _ => true,
    };
let or2 : Bool -> Bool -> Bool =
    fun (x : Bool) (y : Bool) => let a : (Bool, Bool) = (x, y);
    match a._0 {
        false => match a._1 {
            false => false,
            _ => true,
        },
        _ => true,
    };
let or3 : Bool -> Bool -> Bool =
    fun (x : Bool) (y : Bool) => let a : (Bool, Bool) = (x, y);
    match a._0 {
        false => match a._1 {
            false => false,
            true => true,
        },
        true => match a._1 {
            false => true,
            true => true,
        },
    };
let xor1 : Bool -> Bool -> Bool =
    fun (x : Bool) (y : Bool) => let a : (Bool, Bool) = (x, y);
    match a._0 {
        false => match a._1 {
            true => true,
            _ => false,
        },
        true => match a._1 {
            false => true,
            _ => false,
        },
    };
let xor2 : Bool -> Bool -> Bool =
    fun (x : Bool) (y : Bool) => let a : (Bool, Bool) = (x, y);
    match a._0 {
        false => match a._1 {
            true => true,
            _ => false,
        },
        true => match a._1 {
            false => true,
            _ => false,
        },
    };
let xor3 : Bool -> Bool -> Bool =
    fun (x : Bool) (y : Bool) => let a : (Bool, Bool) = (x, y);
    match a._0 {
        false => match a._1 {
            false => false,
            true => true,
        },
        true => match a._1 {
            false => true,
            true => false,
        },
    };
() : ()

stderr:
